#!/usr/bin/env python

from os import path
from getpass import getuser
from datetime import datetime
from time import time
from argparse import ArgumentParser

class NoMessageException(Exception): pass

class Main(object):

    def __init__(self, **kwargs):
        self.command = kwargs.get('command', 'notfound');
        self.message = kwargs.get('message', None)

        if self.command == 'update': 
            self.command_update()
            pass

        if self.command == 'update-show':
            self.command_update_show()
            pass

    def get_data_path(self, key):
        year, week, weekday = datetime.now().isocalendar()
        data_path = '/Users/%s/Dropbox/.whatidid/%s/%d/%d.md' % (getuser(), key, year, week);
        if not path.exists(data_path):
            updates = open(data_path, 'w+')
            updates.write('')
            updates.close()
        return data_path

    def command_update(self):
        data_path = self.get_data_path('updates')
        if self.message:
            f = open(data_path, 'a')
            f.write("%d:%s\n" % (int(time()), self.message))
            f.close()
        else:
            raise NoMessageException('No message specified')

    def command_update_show(self):
        data_path = self.get_data_path('updates')
        updates = open(data_path, 'rb')
        for line in updates:
            timestamp, message = line.rstrip().split(':');
            print "%s: %s" % (datetime.fromtimestamp(int(timestamp)).strftime('%A'), message)
        updates.close();


if __name__ == '__main__':
    parser = ArgumentParser(description=u'Keeping track of what you did this week')
    parser.add_argument('command', metavar='COMMAND', type=str,
        help=u'A command, ie: update, update-show, update-mail')
    parser.add_argument('-m', '--message', type=str, metavar='"A message"', help=u'A message')
    args = parser.parse_args()

    main = Main(command=args.command, message=args.message)

